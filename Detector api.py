from fastapi import FastAPI, UploadFile, File, HTTPException
from fastapi.responses import JSONResponse
import pdfplumber
from openai import AzureOpenAI
import os
from dotenv import load_dotenv
app = FastAPI()

load_dotenv(r"C:\Users\rohan.rf\PycharmProjects\PythonProject\key.env")

client = AzureOpenAI(
    api_key=os.getenv("api_key"),
    api_version="2024-05-01-preview",
    azure_endpoint=os.getenv("azure_endpoint")
)

def extract_text_from_pdf(file) -> str:
    text = ""
    with pdfplumber.open(file) as pdf:
        for page in pdf.pages:
            page_text = page.extract_text()
            if page_text:
                text += page_text + "\n"
    return text.strip()

@app.post("/analyze-resume/")
async def analyze_resume(file: UploadFile = File(...)):
    try:
        # Extract text from uploaded PDF
        resume_text = extract_text_from_pdf(file.file)

        # Construct prompt
        prompt = f"""
        You are an expert AI trained to distinguish between human-written and AI-generated resumes. Analyze the following resume and determine the likelihood that it was generated by an AI.

        Evaluate the resume using the following criteria:

        1. **Language Patterns**:
           - Is the language overly generic, polished, or formal?
           - Are there signs of repetitive or templated sentence structures?
           - Does the vocabulary lack natural variation or sound unnatural?

        2. **Content Specificity**:
           - Are there concrete, personal, or quantifiable achievements?
           - Does the resume reflect realistic career progression and domain-specific knowledge?

        3. **Stylistic Consistency**:
           - Is the tone consistent throughout the document?
           - Are there formatting inconsistencies or signs of automated generation?

        4. **Comparative Analysis**:
           - Highlight any phrases or sections that resemble known AI-generated content.
           - Compare the structure and phrasing to patterns you would typically generate.

        5. **Training Data Comparison**:
           - Cross-reference the resume’s language, structure, and phrasing with examples of AI-generated resumes from your training data.
           - Identify any strong similarities or direct matches to known AI-generated resume templates or phrasing.

        Then provide the following in a structured format:
        - **Mention Ai-generated or Human Written 
        - **Confidence Score (0–100%)**: Likelihood that the resume was AI-generated
        - **Highlighted Examples**: Specific excerpts that support your conclusion
        - **Reasoning**: A concise explanation based on your internal knowledge of AI generation patterns and training data comparisons

        Resume Text:
        {resume_text}

        """


        response = client.chat.completions.create(
            model="synapt-dev-gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Your task is to determine whether the given resume is AI-generated."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3,
            max_tokens=300
        )

        result = response.choices[0].message.content
        return JSONResponse(content={"analysis": result})

    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error processing resume: {e}")
